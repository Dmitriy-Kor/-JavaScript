{"version":3,"sources":["board.js","checkers.js","game.js","main.js","settings.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../app.js","sourcesContent":["class Board {\n    constructor() {\n        // получаем таблицу\n        this.boardEl = document.getElementById(\"board\");\n        // получаем радио инпуты\n        this.inputRus = document.getElementById(\"rus\");\n        this.inputInt = document.getElementById(\"int\");\n        // получаем кнопку\n        this.btnStart = document.getElementById(\"btnStart\");\n        // получае меню (чтобы потом скрыть)\n        this.menuEl = document.querySelector(\".menuGame\");\n    }\n\n    init(settings, game){\n        this.settings = settings;\n        this.game = game;\n    }\n\n    /**\n     * метод отрисовывает игровую доску и присваивает клеткам класс (\"white\" или \"black\")\n     */\n    renderBoard() {\n        let firstCellColor = \"white\"; // цвет верхней левой клетки\n        for (let row = 1; row <= this.settings.rowsCount; row++) {\n            let tr = document.createElement(\"tr\");// создаем тег <tr>\n            this.boardEl.appendChild(tr); //добавляем <tr> в таблицу\n\n            for (let col = 1; col <= this.settings.colsCount; col++) {\n                let td = document.createElement(\"td\"); // создаем тег <td>\n                //td.dataset.row = row.toString();\n                //td.dataset.col = col.toString();\n                td.classList.add(firstCellColor);\n                tr.appendChild(td); // добавляем тег <td> в <tr>\n\n                // чередуем цвета клеток\n                if (firstCellColor === \"white\"){\n                    firstCellColor = \"black\"\n                } else {\n                    firstCellColor = \"white\"\n                }\n            }\n\n            // чердуем цвет первой клетки в ряду\n            if (firstCellColor === \"white\"){\n                firstCellColor = \"black\"\n            } else {\n                firstCellColor = \"white\"\n            }\n        }\n    }\n    // тут загвоздка - стрелочной функции передаем объект, но в дальнейшем нужно удалить слушатель события.\n    // нужно как то объявить функцию cellClickHandler чтобы передовался объект а потом удалить слушатель события\n    /**\n     * метод назначает слушатель события по щелчку на игровой доске\n     */\n    initEventHandlers(){\n        this.boardEl.addEventListener(\"click\", event => this.game.cellClickHandler(event));\n    }\n\n    // initEventHandlers(){\n    //     let table = this.boardEl;\n    //     let listenerFunction = function (event) {\n    //         this.game.cellClickHandler(event);\n    //     table.addEventListener(\"click\",listenerFunction,false);\n    //     }\n    // }\n\n\n}","class Checkers {\n\n    init(settings,board){\n        this.settings = settings;\n    }\n\n    /**\n     * Метод расставляет на поле шашки\n     * @param {number} rows колличество рядов шашек у игроков (русские по 3 ряда, междунородные по 4 ряда шашек)\n     */\n    insertCheckers(rows){\n        this.insertCheckersBlack(rows);\n        this.insertCheckersWhite(rows);\n    }\n\n    /**\n     * Метод расставляет черные шашки в клетки поля и присваивает им класс \"blackChecker\"\n     * @param {number} rows  колличество рядов шашек у игрока\n     */\n    insertCheckersBlack(rows) {\n        // получаем ячейки в нужном ряду (сверху игрового поля)\n        for (let i = 0; i <= rows; i++) {\n            let сheckers = document.querySelectorAll(\"tr:nth-child(\" + i + \") td\");\n            console.log(сheckers);\n\n            // проходимся по ячейкам, если есть класс \"black\" ставим шашку\n            сheckers.forEach((cell) => {\n                if (cell.classList == \"black\") {\n                    cell.innerHTML = this.settings.figure;\n                    cell.classList.add(\"blackChecker\");\n                }\n\n            })\n        }\n    }\n    /**\n     * Метод расставляет черные шашки в клетки поля и присваивает им класс \"whiteChecker\"\n     * @param {number} rows  колличество рядов шашек у игрока\n     */\n    insertCheckersWhite(rows){\n        // получаем ячейки в нужном ряду (снизу игрового поля)\n        for (let i = this.settings.rowsCount; i > this.settings.rowsCount - rows; i--) {\n            let сheckers = document.querySelectorAll(\"tr:nth-child(\" + i + \") td\");\n            console.log(сheckers);\n\n            // проходимся по ячейкам, если есть класс \"black\" ставим шашку\n            сheckers.forEach((cell) => {\n                if (cell.classList == \"black\") {\n                    cell.innerHTML = this.settings.figure;\n                    cell.classList.add(\"whiteChecker\");\n                }\n\n            })\n        }\n    }\n}","class Game {\n    init(board, settings, checkers) {\n        this.board = board;\n        this.settings = settings;\n        this.checkers = checkers;\n    }\n\n\n    cellClickHandler(event) {\n        console.log(event)\n        if (event.target.classList.contains(\"fas\")) {\n            let cell = this.getParentElFromClickTarget(event);\n            cell.innerHTML = \"\";\n            cell.classList.remove(\"whiteChecker\", \"blackChecker\");\n        }\n        else if (event.target.classList.contains(\"black\") && !event.target.classList.contains(\"whiteChecker\") && !event.target.classList.contains(\"blackChecker\")){\n            let freeCell = event.target;\n            freeCell.innerHTML = this.settings.figure;\n        }\n\n\n    }\n\n\n\n    getParentElFromClickTarget(clickTargetEl) {\n        let cell = clickTargetEl.target.parentElement;\n        return cell;\n    }\n\n    /**\n     * Метод запускает игру по клику на кнопку старт\n     */\n    choseGameType() {\n        this.board.btnStart.addEventListener(\"click\", this.startGame.bind(this));\n    }\n\n    /**\n     * метод запускает игру с нужными настройками взависимости от выбронного типа игры (русские шашки или международные)\n     */\n    startGame() {\n        // если выбранны русские шашки\n        if (this.board.inputRus.checked) {\n            this.settings.rowsCount = 8; // настройки поля\n            this.settings.colsCount = 8; // настройки поля\n            this.board.menuEl.style.display = \"none\"; // скрывает начальное меню\n            this.board.renderBoard(); // отрисовывает доску\n            this.checkers.insertCheckers(3); // раставляет шашки\n        }\n        // если выбраны международные\n        if (this.board.inputInt.checked) {\n            this.settings.rowsCount = 10;\n            this.settings.colsCount = 10;\n            this.board.menuEl.style.display = \"none\";\n            this.board.renderBoard();\n            this.checkers.insertCheckers(4);\n        }\n    }\n}","// всё загрузится\nwindow.addEventListener(\"load\", () =>{\n\n    // создаем объекты игры\n\n    const settings = new Settings() // создаем объект настроек\n    const board = new Board(); // создаем объект доску\n    const checkers = new Checkers(); // создаем обект шашки\n    const game = new Game();\n\n    // передаем доступ к объектам\n\n    board.init(settings, game);\n    checkers.init(settings);\n    game.init(board, settings, checkers);\n\n    // вызываем основные функции\n    game.choseGameType();\n    board.initEventHandlers();\n\n});","class Settings {\n    constructor() {\n        this.rowsCount = 8; // колличество рядов игровой доски\n        this.colsCount = 8; // колличество колонок игровой доски\n        this.figure = '<i class=\"fas fa-hockey-puck\"></i>'; // иконка шашки\n        this.figureQinee = '<i class=\"fas fa-ring\"></i>'; // иконка дамки\n    }\n\n}"]}